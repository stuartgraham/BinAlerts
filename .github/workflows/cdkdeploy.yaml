name: CDK Build Pipeline

concurrency:
  group: ${{ github.head_ref || github.ref_name }} 

on:  
  push:
    tags-ignore:
      - '*'
    branches:
      - 'main'

permissions:
  id-token: write
  contents: read

jobs:
  cdk_build:
    runs-on: ubuntu-22.04
    env:
      AWS_ACCOUNT_NUMBER: ${{ secrets.AWS_ACCOUNT_NUMBER }}
      DOCKER_REGISTRY: ${{ secrets.AWS_ACCOUNT_NUMBER }}.dkr.ecr.eu-west-1.amazonaws.com
      DOCKER_IMAGE: binalerts   
      DOCKER_TARGET_PLATFORM: linux/amd64
      PROPERTY_ID: ${{ secrets.PROPERTY_ID }}
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      CHAT_ID: ${{ secrets.CHAT_ID }}
    steps:
      - name: Verify account number presence
        env:
          AWS_ACCOUNT_NUMBER : ${{ secrets.AWS_ACCOUNT_NUMBER }}
        if: "${{ env.AWS_ACCOUNT_NUMBER!= '' }}"     
        run: echo "This command is executed if AWS_ACCOUNT_NUMBER secret is populated"

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.0
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_NUMBER }}:role/GithubOidcRole
          role-session-name: GitHubActions-${{ github.run_id }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.7.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
    
      - name: Run Buildx (push image) - Shropshire bot     
        run: |        
          docker buildx build \
          --platform ${DOCKER_TARGET_PLATFORM} \
          --tag ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${GITHUB_RUN_NUMBER} \
          --tag ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:latest  \
          --file ./Dockerfile \
          --provenance=false \
          --output type=image,push=true .
        working-directory: ./lambda/shropshire

      - name: Get image description
        id: image-digest
        run: |        
          echo "::set-output name=digest::$( \
          aws ecr describe-images \
          --repository-name binalerts \
          --image-ids imageTag=latest \
          --query imageDetails[0].imageDigest \
          | sed -e 's/^"//' -e 's/"$//' \
          )"

      - name: Update Parameter store
        run: |        
          aws ssm put-parameter \
          --name /binalerts/shropshireDockerImage \
          --value ${{steps.image-digest.outputs.digest}} \
          --type String \
          --overwrite

      - name: Install dependencies
        run: yarn
      - name: Ensure Bootstrap Stack - eu-west-1
        run: yarn cdk bootstrap aws://${{ secrets.AWS_ACCOUNT_NUMBER }}/eu-west-1
      - name: Synth stack
        run: yarn cdk synth
      - name: Deploy stack
        run: yarn cdk deploy --all --require-approval never
